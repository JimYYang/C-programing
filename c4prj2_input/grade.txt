Grading at Sat 12 Nov 2022 01:43:06 PM UTC
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==401== Memcheck, a memory error detector
==401== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==401== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==401== Command: ./tester hands.txt draw.txt
==401== Parent PID: 400
==401== 
==401== Invalid write of size 1
==401==    at 0x109529: read_input (in /graderhome/work/c4prj2_input/tester)
==401==    by 0x10A53E: main (in /graderhome/work/c4prj2_input/tester)
==401==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==401== 
==401== 
==401== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==401==  Access not within mapped region at address 0x0
==401==    at 0x109529: read_input (in /graderhome/work/c4prj2_input/tester)
==401==    by 0x10A53E: main (in /graderhome/work/c4prj2_input/tester)
==401==  If you believe this happened as a result of a stack
==401==  overflow in your program's main thread (unlikely but
==401==  possible), you can try to increase the size of the
==401==  main thread stack using the --main-stacksize= flag.
==401==  The main thread stack size used in this run was 8388608.
==401== 
==401== HEAP SUMMARY:
==401==     in use at exit: 600 bytes in 3 blocks
==401==   total heap usage: 4 allocs, 1 frees, 1,112 bytes allocated
==401== 
==401== LEAK SUMMARY:
==401==    definitely lost: 0 bytes in 0 blocks
==401==    indirectly lost: 0 bytes in 0 blocks
==401==      possibly lost: 0 bytes in 0 blocks
==401==    still reachable: 600 bytes in 3 blocks
==401==         suppressed: 0 bytes in 0 blocks
==401== Rerun with --leak-check=full to see details of leaked memory
==401== 
==401== For lists of detected and suppressed errors, rerun with: -s
==401== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==406== Memcheck, a memory error detector
==406== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==406== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==406== Command: ./tester hands.txt draw.txt
==406== Parent PID: 405
==406== 
==406== Invalid write of size 1
==406==    at 0x109529: read_input (in /graderhome/work/c4prj2_input/tester)
==406==    by 0x10A53E: main (in /graderhome/work/c4prj2_input/tester)
==406==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==406== 
==406== 
==406== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==406==  Access not within mapped region at address 0x0
==406==    at 0x109529: read_input (in /graderhome/work/c4prj2_input/tester)
==406==    by 0x10A53E: main (in /graderhome/work/c4prj2_input/tester)
==406==  If you believe this happened as a result of a stack
==406==  overflow in your program's main thread (unlikely but
==406==  possible), you can try to increase the size of the
==406==  main thread stack using the --main-stacksize= flag.
==406==  The main thread stack size used in this run was 8388608.
==406== 
==406== HEAP SUMMARY:
==406==     in use at exit: 600 bytes in 3 blocks
==406==   total heap usage: 4 allocs, 1 frees, 1,112 bytes allocated
==406== 
==406== LEAK SUMMARY:
==406==    definitely lost: 0 bytes in 0 blocks
==406==    indirectly lost: 0 bytes in 0 blocks
==406==      possibly lost: 0 bytes in 0 blocks
==406==    still reachable: 600 bytes in 3 blocks
==406==         suppressed: 0 bytes in 0 blocks
==406== Rerun with --leak-check=full to see details of leaked memory
==406== 
==406== For lists of detected and suppressed errors, rerun with: -s
==406== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==412== Memcheck, a memory error detector
==412== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==412== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==412== Command: ./tester h.txt d.txt
==412== Parent PID: 411
==412== 
==412== Invalid write of size 1
==412==    at 0x109529: read_input (in /graderhome/work/c4prj2_input/tester)
==412==    by 0x10A53E: main (in /graderhome/work/c4prj2_input/tester)
==412==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==412== 
==412== 
==412== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==412==  Access not within mapped region at address 0x0
==412==    at 0x109529: read_input (in /graderhome/work/c4prj2_input/tester)
==412==    by 0x10A53E: main (in /graderhome/work/c4prj2_input/tester)
==412==  If you believe this happened as a result of a stack
==412==  overflow in your program's main thread (unlikely but
==412==  possible), you can try to increase the size of the
==412==  main thread stack using the --main-stacksize= flag.
==412==  The main thread stack size used in this run was 8388608.
==412== 
==412== HEAP SUMMARY:
==412==     in use at exit: 600 bytes in 3 blocks
==412==   total heap usage: 4 allocs, 1 frees, 1,112 bytes allocated
==412== 
==412== LEAK SUMMARY:
==412==    definitely lost: 0 bytes in 0 blocks
==412==    indirectly lost: 0 bytes in 0 blocks
==412==      possibly lost: 0 bytes in 0 blocks
==412==    still reachable: 600 bytes in 3 blocks
==412==         suppressed: 0 bytes in 0 blocks
==412== Rerun with --leak-check=full to see details of leaked memory
==412== 
==412== For lists of detected and suppressed errors, rerun with: -s
==412== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==418== Memcheck, a memory error detector
==418== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==418== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==418== Command: ./tester i1 i2
==418== Parent PID: 417
==418== 
==418== Invalid write of size 1
==418==    at 0x109529: read_input (in /graderhome/work/c4prj2_input/tester)
==418==    by 0x10A53E: main (in /graderhome/work/c4prj2_input/tester)
==418==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==418== 
==418== 
==418== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==418==  Access not within mapped region at address 0x0
==418==    at 0x109529: read_input (in /graderhome/work/c4prj2_input/tester)
==418==    by 0x10A53E: main (in /graderhome/work/c4prj2_input/tester)
==418==  If you believe this happened as a result of a stack
==418==  overflow in your program's main thread (unlikely but
==418==  possible), you can try to increase the size of the
==418==  main thread stack using the --main-stacksize= flag.
==418==  The main thread stack size used in this run was 8388608.
==418== 
==418== HEAP SUMMARY:
==418==     in use at exit: 600 bytes in 3 blocks
==418==   total heap usage: 4 allocs, 1 frees, 1,112 bytes allocated
==418== 
==418== LEAK SUMMARY:
==418==    definitely lost: 0 bytes in 0 blocks
==418==    indirectly lost: 0 bytes in 0 blocks
==418==      possibly lost: 0 bytes in 0 blocks
==418==    still reachable: 600 bytes in 3 blocks
==418==         suppressed: 0 bytes in 0 blocks
==418== Rerun with --leak-check=full to see details of leaked memory
==418== 
==418== For lists of detected and suppressed errors, rerun with: -s
==418== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
